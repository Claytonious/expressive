<?xml version="1.0"?>
<package >
  <metadata>
    <id>ExpressiveParser</id>
    <version>1.0.1</version>
    <authors>Shaun Lawrence</authors>
    <owners>Shaun Lawrence</owners>
    <licenseUrl>https://opensource.org/licenses/mit</licenseUrl>
    <projectUrl>https://github.com/bijington/expressive</projectUrl>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <description>A multi-platform expression parsing and evaluating framework.</description>
    <releaseNotes> Version 1.0.1 includes
	Bug fixes:
	* Unary operators now correctly evaluate.
	* If either side of an operation is missing an exception will be thrown to idenfity a break in the evaluation.
	* Empty expressions are now treated as a break in the evaluation process.
	* Empty parentheses are now treated as a break in the evaluation process.
	Features:
	* Added in a Null Coalescing operator (??).
	General:
	* Reworked the exceptions that are thrown so that they are all wrapped up inside a single ExpressiveException with a helpful message.
	</releaseNotes>
    <copyright>Copyright(c) 2016 Shaun Lawrence</copyright>
    <tags>Expression Parser Evaluator</tags>
  </metadata>
  <files>
    <file src="bin\Expressive.dll" target="lib\Net40" />
    <file src="bin\Expressive.xml" target="lib\Net40" />
  </files>
</package>